{"version":3,"sources":["components/task.jsx","components/createTask.jsx","components/login.jsx","App.js","index.js"],"names":["Task","task","handlers","className","name","replace","onClick","completeIncompleteTask","completed","style","display","deleteTask","CreateTask","username","inputRef","useRef","createButton","id","logOut","deleteAccount","ref","type","onKeyUp","e","code","current","value","click","placeholder","createTask","deleteAllTasks","Login","userField","passField","loginButton","key","autocomplete","login","signup","LOCAL_STORAGE_USER_KEY","App","useState","state","setState","userInfo","a","promise","fetch","password","then","res","status","json","handleLogout","localStorage","setItem","JSON","stringify","useEffect","parse","getItem","getDBTasks","tasks","data","method","headers","body","setDBTasks","taskName","find","newTasks","filter","alert","push","length","window","confirm","map","warn","document","getElementById","innerText","setTimeout","newUsername","newPassword","console","log","ReactDOM","render"],"mappings":"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","file":"static/js/main.f650f0c1.chunk.js","sourcesContent":["import React from 'react'\r\nimport './css/tasks.css'\r\n\r\nfunction Task ({task, handlers}) {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"task-wrapper\">\r\n                <h1>{task.name.replace('~',' ')}</h1>\r\n                <div className=\"buttons\">\r\n                    <button onClick={() => handlers.completeIncompleteTask(task.name)} className=\"green-btn\">{task.completed ? 'Incomplete' : 'Complete'}</button>\r\n                    <button className=\"red-btn\" style={{display: task.completed ? 'block' : 'none'}} onClick={() => handlers.deleteTask(task.name)}>Delete Task</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Task\r\n\r\n","import React, { useRef } from 'react';\r\n\r\nfunction CreateTask({username, handlers}) {\r\n\r\n    const inputRef = useRef()\r\n    const createButton = useRef()\r\n\r\n    return (\r\n        <>\r\n            <div className=\"create-task-wrapper\">\r\n                <div className=\"logged-section\">\r\n                    <span>Username: {username}</span>\r\n                    <div className=\"logged-btns-wrapper\">\r\n                        <button id=\"logout\" onClick={handlers.logOut} className=\"logged-btn red-btn\">Log Out</button>\r\n                        <button id=\"delete-account\" onClick={handlers.deleteAccount} className=\"logged-btn red-btn\">Delete Account</button>\r\n                    </div>\r\n                </div>\r\n                \r\n                <input ref={inputRef} type=\"text\" onKeyUp={e => {if (e.code === 'Enter' && inputRef.current.value !== '') {createButton.current.click()}}} placeholder=\"Type the task name here...\"></input>\r\n                <div className=\"buttons\">\r\n                    <button ref={createButton} onClick={() => {handlers.createTask(inputRef.current.value); inputRef.current.value = null}} className=\"create-task green-btn\">Create Task</button>\r\n                    <button className=\"red-btn\" onClick={() => handlers.deleteAllTasks()} id=\"delete-all-tasks\">Delete All Tasks</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateTask\r\n","import React, { useRef } from 'react'\r\nimport './css/tasks.css'\r\n\r\nfunction Login({handlers}) {\r\n\r\n    const userField = useRef()\r\n    const passField = useRef()\r\n    const loginButton = useRef()\r\n\r\n    return (\r\n        <>\r\n            <div className=\"login-page\">\r\n                <div className=\"login-card\">     \r\n                    <h1>LOGIN / SIGN UP</h1>\r\n                    <input onKeyUp={e => {if(e.key === 'Enter') loginButton.current.click()}} ref={userField} className=\"input-field username-field\" type=\"text\" placeholder=\"Username\" autocomplete=\"new-password\"/>\r\n                    <input onKeyUp={e => {if(e.key === 'Enter') loginButton.current.click()}} ref={passField} className=\"input-field password-field\" type=\"password\" placeholder=\"Password\" autocomplete=\"off\"/>\r\n                    <div className=\"btns-wrapper\">\r\n                        <button ref={loginButton} onClick={() => handlers.login(userField.current.value, passField.current.value)} type=\"button\" className=\"btn btn-outline-success\">Login</button>      \r\n                        <button onClick={() => handlers.signup(userField.current.value, passField.current.value)} className=\"btn btn-outline-secondary\">Sign Up</button>\r\n                    </div>\r\n                    <label id=\"warnings-label\"></label>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n\r\n","import React, { useState, useEffect } from 'react';\nimport Task from './components/task'\nimport CreateTask from './components/createTask'\nimport Login from './components/login'\n\nconst LOCAL_STORAGE_USER_KEY = 'taskUser.app'\n\nfunction App() {\n\n  const [state, setState] = useState({\"userInfo\": {\"username\": '', \"password\": ''},\"tasks\": []})\n\n  // GET USER TASKS WHEN FIRST ENTERING THE PAGE\n  useEffect(() => {\n    let userInfo = JSON.parse(localStorage.getItem(LOCAL_STORAGE_USER_KEY))\n    if (userInfo) {\n      getDBTasks(userInfo).then(tasks => {\n        if (tasks !== false) setState({\"userInfo\": userInfo,\"tasks\": tasks}\n      )})\n    }\n  }, [])\n\n  // UPDATE DB EVERYTIME TASKS ARRAY CHANGES\n  useEffect(() => {\n    if (state.userInfo.username !== '') {\n      localStorage.setItem(LOCAL_STORAGE_USER_KEY, JSON.stringify(state.userInfo))\n      setDBTasks()\n    }\n  }, [state])\n\n  // DB TASKS = LOCAL TASKS\n  function setDBTasks() {\n    var data = JSON.stringify({\n      \"tasks\": state.tasks\n    })\n    fetch(`https://tasks--api.herokuapp.com/login/${state.userInfo.username}/${state.userInfo.password}/settasks`, {method: 'post', headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json'\n    }, body: data})  \n  }\n\n  // RETURN DB TASKS\n  async function getDBTasks(userInfo) {\n    var promise = false\n    if (userInfo.username !== '') {\n      promise = await fetch(`https://tasks--api.herokuapp.com/login/${userInfo.username}/${userInfo.password}/gettasks`).then(res => {\n        if (res.status === 200) {return res.json()} else {return false}\n      })\n    }\n    return promise\n  }\n  ///////////////////\n\n  // DELETE A TASK\n  function handleDeleteTask(taskName) {\n    if (state.tasks.find(task => task.name === taskName)) {\n      const newTasks = state.tasks.filter(task => task.name !== taskName)\n      setState({\"userInfo\": state.userInfo, \"tasks\": newTasks})\n    }\n  }\n\n  // CREATE NEW TASK\n  function handleCreateTask(taskName) {\n    if (taskName !== '' && !state.tasks.find(task => task.name === taskName)) {\n      let newTasks = state.tasks\n      newTasks.push({\n        \"name\": taskName,\n        \"completed\": false,\n      })\n      setState({userInfo: state.userInfo, tasks: newTasks})\n    } else {\n      alert('Invalid task name!')\n    }\n  }\n\n  // DELETE ALL TASKS\n  function handleDeleteAllTasks() {\n    if (state.tasks.length > 0) {  \n      if (window.confirm('Are you sure you want to delete all tasks?')) setState({\"userInfo\": state.userInfo , \"tasks\": []})\n    } else {\n      alert('There are no tasks to delete!')\n    }\n  }\n\n  // TOGGLE TASKS STATE\n  function handleCompleteIncompleteTask(taskName) {\n    if (state.tasks.find(task => task.name === taskName)) {\n      let newTasks = state.tasks\n      newTasks.map(task => {\n        if (task.name === taskName) task.completed = !task.completed\n      })\n      setState({\"userInfo\": state.userInfo, \"tasks\": newTasks})\n    }\n  }\n  // LOGIN\n  function handleLogin(username, password) {\n    if (username !== '' && password !== '') {\n      let warn = document.getElementById('warnings-label')\n      warn.innerText = ''\n      fetch(`https://tasks--api.herokuapp.com/login/${username}/${password}/gettasks`).then(res => {  \n        if (res.status === 404) {     \n          warn.innerText = 'Wrong Credentials!'\n          setTimeout(() => warn.innerText = '', 4000)\n          return null\n        } else {\n          return res.json()\n        }\n      }).then(tasks => {  \n        if (tasks != null) {\n          warn.innerText = `Welcome ${username}!`\n          setTimeout(() => setState({\"userInfo\": {\"username\": username, \"password\": password}, \"tasks\": tasks}), 2000)\n        }\n      })\n    }\n  }\n\n  // SIGN UP\n  function handleSignUp(newUsername, newPassword) {\n    var warn = document.getElementById('warnings-label')\n    fetch(`https://tasks--api.herokuapp.com/signup/${newUsername}/${newPassword}`, {method: 'post'}).then(res => {\n      if (res.status === 200) {\n        warn.innerText = 'The registration was successful! You may login now.'\n        setTimeout(() => warn.innerText = '', 4000)\n      } else if (res.status === 409) {\n        warn.innerText = 'That username already exists!'\n        setTimeout(() => warn.innerText = '', 4000)\n      } else if (res.status === 400) {\n        warn.innerText = 'Username and Password need at least 5 characters and can´t contain any of these special characters :\\n []?«|!\"ºª~^´`*+-:;,<>=)(/&%$#{}€£§ '\n        setTimeout(() => warn.innerText = '', 12000)\n      }\n    })\n  }   \n\n  // LOGOUT\n  function handleLogout() {\n    setState({\n      \"userInfo\": {\"username\": '', \"password\": ''},\n      \"tasks\": []\n    })\n    localStorage.setItem(LOCAL_STORAGE_USER_KEY, JSON.stringify({\"username\": '', \"password\": ''}))\n  }\n\n  function handleDeleteAccount() {\n    console.log('HANDLE DELETE')\n    if (window.confirm('Are you sure you want to delete your account?')) {\n      fetch(`https://tasks--api.herokuapp.com/delete/${state.userInfo.username}/${state.userInfo.password}`).then(res => {\n        console.log(res)\n        if (res.status === 200) handleLogout()\n      })\n    }\n  }\n\n  // HANDLERS TO BE CALLED BY CHILDREN\n  const handlers = {\n    deleteTask: handleDeleteTask,\n    createTask: handleCreateTask,\n    deleteAllTasks: handleDeleteAllTasks,\n    completeIncompleteTask: handleCompleteIncompleteTask,\n    login: handleLogin,\n    signup: handleSignUp,\n    logOut: handleLogout,\n    deleteAccount: handleDeleteAccount\n  }\n\n  return (\n    <>\n    {!state.userInfo.username.length ? <Login handlers={handlers} /> : <> \n            <CreateTask username={state.userInfo.username} handlers={handlers} />\n            <div className=\"incomplete-tasks\"><h1 className=\"title\">INCOMPLETE TASKS</h1>{state.userInfo.username ? state.tasks.map(task => {if (!task.completed) return <Task key={task.name} task={task} handlers={handlers}/>}) : null}</div>\n            <div className=\"complete-tasks\"><h1 className=\"title\">COMPLETE TASKS</h1>{state.userInfo.username ? state.tasks.map(task => {if (task.completed) return <Task key={task.name} task={task} handlers={handlers}/>}) : null}</div>\n            </>\n    }\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}